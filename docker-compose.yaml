services:
  minio:
      hostname: minio
      image: 'minio/minio'
      container_name: minio
      ports:
        - '9000:9000'
        - '9001:9001'
      volumes:
        - ./volumns/minio:/data
      environment:
        - MINIO_ROOT_USER=admin
        - MINIO_ROOT_PASSWORD=admin123
      command: server /data --console-address ":9001"
      networks:
        - lakehouse
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 5s
        timeout: 5s
        retries: 5

  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin123
      - AWS_REGION=us-east-1
    networks:
      - lakehouse
    volumes:
      - ./scripts/init_minio.sh:/init_minio.sh 
    entrypoint: ["/bin/sh", "-c", "/init_minio.sh"]
    depends_on:
      minio:
        condition: service_healthy

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    hostname: rest
    ports:
      - 8181:8181
    networks:
      - lakehouse
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=admin123
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    depends_on:
      - minio

  trino:
    image: 'trinodb/trino:latest'
    container_name: trino
    hostname: trino
    ports:
      - '8060:8060'
    volumes:
      - ./trino/etc:/etc/trino
    networks:
      - lakehouse
    depends_on:
      - rest

  postgres:
    image: postgres
    hostname: postgres
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_USER=admin
      - POSTGRES_DB=supply_chain
    ports:
      - '5432:5432'
    volumes:
      - ./volumns/postgres_db:/var/lib/postgresql/data
      - ./scripts/restore_db/:/backup/
    networks:
      - lakehouse
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d supply_chain -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  cube:
    image: cubejs/cube
    container_name: cube
    hostname: cube
    volumes:
      - ./conf/cube:/cube/conf
    ports:
      - 3000:3000 
      - 4000:4000
      - 3245:3245
    networks:
      - lakehouse


networks:
  lakehouse:
    driver: bridge

